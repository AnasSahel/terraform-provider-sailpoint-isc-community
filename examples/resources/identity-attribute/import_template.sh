#!/bin/bash

# SailPoint ISC Identity Attribute Bulk Import Script
# Generated by Terraform - modify with caution

set -e  # Exit immediately if a command exits with a non-zero status
set -u  # Treat unset variables as an error

echo "üöÄ SailPoint Identity Attribute Bulk Import"
echo "==========================================="
echo ""

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Counters
SUCCESS_COUNT=0
FAILURE_COUNT=0
TOTAL_COUNT=${length(attributes)}

echo -e "${BLUE}üìä Planning to import $TOTAL_COUNT identity attributes${NC}"
echo ""

# Function to import a single attribute
import_attribute() {
    local resource_name=$1
    local attribute_name=$2
    
    echo -e "${BLUE}üì• Importing:${NC} $attribute_name"
    echo -e "   ${YELLOW}Resource:${NC} sailpoint_identity_attribute.$resource_name"
    
    if terraform import "sailpoint_identity_attribute.$resource_name" "$attribute_name" 2>/dev/null; then
        echo -e "   ${GREEN}‚úÖ Success${NC}"
        ((SUCCESS_COUNT++))
    else
        echo -e "   ${RED}‚ùå Failed${NC}"
        echo -e "   ${YELLOW}‚ö†Ô∏è  Possible reasons:${NC}"
        echo "      - Attribute doesn't exist in SailPoint"
        echo "      - Attribute name is incorrect (case-sensitive)"
        echo "      - Attribute is a system attribute (cannot be imported)"
        echo "      - Resource already exists in Terraform state"
        ((FAILURE_COUNT++))
    fi
    echo ""
}

# Import each attribute
%{ for key, attr in attributes ~}
import_attribute "${key}" "${attr.name}"
%{ endfor ~}

# Summary
echo "üìä Import Summary"
echo "================="
echo -e "${GREEN}‚úÖ Successful imports: $SUCCESS_COUNT${NC}"
echo -e "${RED}‚ùå Failed imports: $FAILURE_COUNT${NC}"
echo -e "${BLUE}üìà Total attempted: $TOTAL_COUNT${NC}"
echo ""

if [ $FAILURE_COUNT -eq 0 ]; then
    echo -e "${GREEN}üéâ All imports completed successfully!${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Some imports failed. Please check the output above.${NC}"
fi

echo ""
echo "üîç Next Steps:"
echo "1. Run 'terraform plan' to verify the imported state"
echo "2. Update your .tf files to match the imported configuration"
echo "3. Run 'terraform plan' again to ensure no drift"
echo "4. Consider adding lifecycle rules for imported resources"
echo ""
echo "üìö Useful commands:"
echo "- terraform state list                    # List all managed resources"
echo "- terraform state show <resource>        # Show detailed resource state"
echo "- terraform plan                         # Check for configuration drift"
echo "- terraform apply                        # Apply any necessary changes"